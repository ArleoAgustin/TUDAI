/*	Hacer un programa que dado el arreglo definido y precargado permita
	obtener a través de métodos la posición de inicio y la posición de fin de la
	secuencia ubicada a partir de una posición entera ingresada por el
	usuario. Finalmente, si existen imprima por pantalla ambas posiciones
	obtenidas. */

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Random;
public class practicos {
	public static final int MAX = 20;
	public static final int MAXVALOR = 9;
	public static final int MINVALOR = 1;
	public static final double probabilidad_numero = 0.4;
	public static void main(String[] args) {
		int [] arrint;
		arrint = new int[MAX];
		int pos;
		
		BufferedReader entrada = new BufferedReader(new InputStreamReader(System.in));
		
		try{

			cargar_arreglo_aleatorio_secuencias_int(arrint);
			
			imprimir_arreglo_secuencias_int(arrint);
			System.out.println();
			System.out.println("Ingrese una posicion en la cual desea buscar una secuencia: ");
			pos = Integer.valueOf(entrada.readLine());
			System.out.println();
			imprimir_secuencia(arrint, pos);
			
			
			
			
		}
	
		catch(Exception exc){
			System.out.println(exc);
		}
	}
	
	
//-------------------------------------------------PROCEDIMIENTOS Y FUNCIONES-----------------------------------------------------------------------------//
	
	
//CARGA DE SECUENCIAS EN ARREGLOS DE ENTEROS	

	public static void cargar_arreglo_aleatorio_secuencias_int(int [] arr){
		
		Random r = new Random();
		arr[0] = 0;
		arr[MAX-1] = 0;
		for (int pos = 1; pos < MAX-1; pos++){
			if (r.nextDouble()>probabilidad_numero){
			arr[pos]=(r.nextInt(MAXVALOR-MINVALOR+1) + MINVALOR);
			}
			else{
			arr[pos]=0;
			}
		}
	}

	//PROCEDIMIENTO IMPRIMIR SI ESTA SECUENCIA, EN DONDE EMPIEZA Y TERMINA
	
	public static void imprimir_secuencia (int [] arrint, int pos) {
		int front1, front2;
		front1 = pos;
		boolean estaSec = esta_secuencia (arrint, pos);
		if (estaSec != false) {
			
			if ((arrint[pos -1] == 0) && (arrint[pos+1] == 0)) {
				
				System.out.println("En la posicion " + pos + " no hay una secuencia valida");
			}
			
			if (((arrint[pos-1] == 0) && (arrint[pos+1] != 0)) || ((arrint[pos-1] != 0) && (arrint[pos+1] == 0)) || ((arrint[pos-1] != 0) && (arrint[pos+1] != 0))) {
				
				System.out.println("La posicion " + pos + " es una secuencia");
				
				while (arrint[front1 -1] != 0) {
					front1 = front1 -1;
				}
			
				front2 = front1;
				while (arrint[front2 +1] != 0) {
					front2 = front2 +1;
				}
				
				System.out.println("El inicio de secuencia se encuentra en la posicion: " + front1);
				System.out.println();
				System.out.println("El final de la secuencia se encuentra en la posicion: " + front2);

			}
		
		}
		
		else {
			System.out.println("En la posicion " + pos + " no hay una secuencia");
		}
	}
	
	
	
	//FUNCION BOOLEAN QUE ME DICE SI LA SECUENCIA SE ENCUENTRA EN LA POSICION INGRESADA
	
	public static boolean esta_secuencia (int [] arr, int pos) {
		
		boolean secuencia = false;
		if (arr[pos] != 0) {
			secuencia = true;
		}
		return (secuencia);
		
	}
	
	
//IMPRIMIR SECUENCIAS DE ARREGLOS ENTEROS

	public static void imprimir_arreglo_secuencias_int(int [] arr){
		
		System.out.print("Arreglo de secuencias int\n|");
		for (int pos = 0; pos < MAX; pos++){
			System.out.print(arr[pos]+"|");
		}
		System.out.print("\n");
		}
}