/* Hacer un programa que dado una matriz de enteros de tamaño 5*10 que se encuentra
	precargada, solicite al usuario un numero entero y una posición fila, columna. Con estos
	datos tendrá que realizar un corrimiento a derecha (se pierde el último valor en dicha fila)
	y colocar el numero en la matriz en la posición fila, columna indicada.	
 */

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Random;
public class Practica {
	public static final int MAXFILA = 4;
	public static final int MAXCOLUMNA = 5;
	public static final int MAXVALOR = 10;
	public static final int MINVALOR = 1;

	public static void main(String[] args) {                
		int [][] matint;                                  
		matint = new int[MAXFILA][MAXCOLUMNA];
                  
		cargar_matriz_aleatorio_int(matint);
		imprimir_matriz_int(matint);
		System.out.println();
		posicionar_correr (matint);
		System.out.println();
		imprimir_matriz_int(matint);
	}

	
	//FUNCION CARGAR VALOR
	
		public static int cargar_entero () {
							
			int valor = 0;
							
			BufferedReader entrada = new BufferedReader(new InputStreamReader(System.in));
							
			try {
				System.out.println ("Ingrese un valor entero: ");
				valor = Integer.valueOf(entrada.readLine());
			}
			catch(Exception exc) {
			System.out.println (exc);
								
			}
		return (valor);
		}
	
		
		
		
		
		
	public static void posicionar_correr (int [][] matint) {
		
		int valor = cargar_entero();
		System.out.println ("Ingrese una fila");
		int fila = cargar_entero();
		System.out.println ("Ingrese una columna");
		int columna = cargar_entero();

		if ((fila < MAXFILA) && (columna < MAXCOLUMNA)) {
	
			 corrimiento_izq (matint[fila], columna);
			 matint[fila][columna] = valor;
		}
		else {
			System.out.println ("La posicion ingresada no existe");
		}
	}
	
	
	
	
	
	public static void corrimiento_izq (int [] arrint, int columna) {
	
		int pos = MAXCOLUMNA -1;
		
		while (pos > columna) {
			
			arrint[pos] = arrint[pos-1];
			pos--;
		}
		
	}
		

	

//CARGAR MATRIZ 

	public static void cargar_matriz_aleatorio_int(int [][] mat){
		Random r = new Random();
		for (int fila = 0; fila < MAXFILA; fila++){
			for (int columna = 0; columna < MAXCOLUMNA; columna++){
				mat[fila][columna]=(r.nextInt(MAXVALOR+MINVALOR-1) + MINVALOR);
			}
		}
	}


//IMPRIMIR MATRIZ

	public static void imprimir_matriz_int(int [][] mat){
		for (int fila = 0; fila < MAXFILA; fila++){
			System.out.print("|");
			for (int columna = 0; columna < MAXCOLUMNA; columna++){
				System.out.print(mat[fila][columna]+"|");
			}
			System.out.println("");
		}
	}
	
}